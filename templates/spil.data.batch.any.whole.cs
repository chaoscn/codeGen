using System.Data.SqlTypes;
using System.Text;
using Dummy.Data;
using Dummy.Monitoring.MonitoringInterface.Common;
using Dummy.Monitoring.MonitoringLib.Managers;

///
/// This file is generated by private\Monitoring\CodeGen\codegen.py
/// Please don't edit this file.
///

namespace Dummy.Monitoring.MonitoringLib.DAO
{
    public class MonitoringDataBatchedAnyLogging : MonitoringDataBatchedAny
    {
        protected LogManager logManager;
        protected ApplicationStatusManager applicationStatusManager;

        public MonitoringDataBatchedAnyLogging(LogManager logManager, ApplicationStatusManager applicationStatusManager)
        {
            this.logManager = logManager;
            this.applicationStatusManager = applicationStatusManager;
        }

        public override ProcedureResults ExecuteBatch(ISpilConnectionManager scm)
        {
            applicationStatusManager.IncreaseDBQueryCount();
            return base.ExecuteBatch(scm);
        }

        protected virtual void Log(string spName, params object[] objects)
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine();
            sb.AppendFormat("EXEC spm_{0}{1}", spName, Build.ScsVersion.SqlSuffix);
            sb.AppendLine();
            for (int i = 0; i < objects.Length; i += 2)
            {
                string n = (string) objects[i];
                object o = objects[i + 1];
                if (o != null)
                {
                    if (o is SqlBoolean)
                        o = (SqlBoolean)o? 1: 0;
                    else if (o is SqlXml)
                        o = ((SqlXml)o).Value;
                }
                if (o == null)
                    sb.AppendFormat("    @{0} = NULL", n);
                else
                    sb.AppendFormat("    @{0} = '{1}'", n, o.ToString().Replace("'", "''"));
                if (i < objects.Length - 2)
                    sb.Append(",");
                sb.AppendLine();
            }
            logManager.Log(LogLevel.Verbose, sb.ToString());
        }

$publicMethods
    }
}
